How did viewing a diff between two versions of a file help you see the bug that was introduced?
	It narrows down the area that you need to physically look at inorder to find the difference.
	It helps developers spot differences that were not suppose to be there.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
	It will allow you to be more experimental.  You can alwys go back to an older version if things don't work.
	You can see the history of the updates to help troubleshoot production issues.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
	GIT allows you to commit when you feel it is appropriate.  You choose the size of the changes to commit.  You pick what is the
	most conducive to your debugging.  Automatic commits are to eratic.  Maybe you want to change small changes, maybe big. You do 
	what fits your style and is easy for you.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
	More complex applications require multiple files to work together.  Keeping every thing aligned really hepls track the changes 
	and troubleshoot errors.

How can you use the commands git log and git diff to view the history of files?
	Git logs let you see the commits and the notes attached for a high level overview of what changed.  You can use the diff command
	to see that actual changes at the code level.

How might using version control make you more confident to make changes that could break something?
	It gives you a safety net.

Now that you have your workspace set up, what do you want to try using Git for?
	i need to learn it for work.

What happens when you initialize a repository? Why do you need to do it?
	It tells GIT that you want to use version control on that folder.  
